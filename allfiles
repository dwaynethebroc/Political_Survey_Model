public class Main {
    public static void main(String[] args) {
        PoliticalSurvey survey = new PoliticalSurvey();
        survey.runSurvey();
    }
}

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

class DataStorage {
    private static final String DEMOCRAT_FILE = "democrat_responses.csv";
    private static final String REPUBLICAN_FILE = "republican_responses.csv";
    private static final String LIBERTARIAN_FILE = "libertarian_responses.csv";
    private static final String INDEPENDENT_FILE = "independent_responses.csv";
    private static final String ALL_RESPONSES_FILE = "all_responses.csv";

    public static void saveResponse(SurveyResponse response, String party) {
        saveToFile(ALL_RESPONSES_FILE, response, party);
        saveToFile(getPartyFile(party), response, party);
    }

    private static void saveToFile(String filename, SurveyResponse response, String party) {
        try (FileWriter writer = new FileWriter(filename, true)) {
            if (new File(filename).length() == 0) {
                writer.write("UserID,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15,PredictedParty\n");
            }
            writer.write(response.getUserId() + "," + response.toCSV() + "," + party + "\n");
        } catch (IOException e) {
            System.err.println("Error saving to " + filename + ": " + e.getMessage());
        }
    }

    private static String getPartyFile(String party) {
        switch (party.toLowerCase()) {
            case "democrat":
                return DEMOCRAT_FILE;
            case "republican":
                return REPUBLICAN_FILE;
            case "libertarian":
                return LIBERTARIAN_FILE;
            case "independent":
                return INDEPENDENT_FILE;
            default:
                return "other_responses.csv";
        }
    }
}

import java.util.Scanner;

class PoliticalSurvey {
    private static final Scanner scanner = new Scanner(System.in);
    private static int democraticScore = 0;
    private static int republicanScore = 0;
    private static int libertarianScore = 0;
    private static int independentScore = 0;

    public void runSurvey() {
        String[][][] allQuestions = PoliticalSurveyQuestions.getQuestions();
        String[] responses = new String[allQuestions.length];
        String userId = "user_" + System.currentTimeMillis();

        System.out.println("Political Affiliation Survey");
        System.out.println("Please answer with A, B, C, or D for each question.\n");

        for (int i = 0; i < allQuestions.length; i++) {
            responses[i] = conductSurvey(allQuestions[i], i + 1, allQuestions.length);
            updateScores(responses[i], i);

            if (i >= 4) { // Start predicting after 5 questions
                String prediction = getPrediction();
                System.out.println("\nCurrent prediction: " + prediction);
                System.out.println("----------------------------------");
            }
        }

        String finalPrediction = getPrediction();
        System.out.println("\nFinal Prediction: " + finalPrediction);

        // Save responses
        SurveyResponse response = new SurveyResponse(userId, responses);
        response.setPredictedParty(finalPrediction);
        DataStorage.saveResponse(response, finalPrediction);
    }

    private String conductSurvey(String[][] question, int questionNumber, int totalQuestions) {
        System.out.println("\nQuestion " + questionNumber + "/" + totalQuestions);
        System.out.println(question[0][0]);

        for (int i = 0; i < question[1].length; i++) {
            System.out.println((char) ('A' + i) + ") " + question[1][i]);
        }

        return getValidResponse();
    }

    private void updateScores(String answer, int questionIndex) {
        int partyIndex = PoliticalSurveyQuestions.ANSWER_KEY[questionIndex][answer.charAt(0) - 'A'];
        switch (partyIndex) {
            case 0:
                democraticScore++;
                break;
            case 1:
                libertarianScore++;
                break;
            case 2:
                republicanScore++;
                break;
            case 3:
                independentScore++;
                break;
        }
    }

    private String getPrediction() {
        int max = Math.max(Math.max(democraticScore, republicanScore),
                Math.max(libertarianScore, independentScore));

        if (max == democraticScore)
            return "Democrat";
        if (max == republicanScore)
            return "Republican";
        if (max == libertarianScore)
            return "Libertarian";
        return "Independent";
    }

    private String getValidResponse() {
        while (true) {
            System.out.print("Your answer (A-D): ");
            String response = scanner.nextLine().trim().toUpperCase();
            if (response.matches("[A-D]")) {
                return response;
            }
            System.out.println("Invalid input. Please enter A, B, C, or D.");
        }
    }
}

public class PoliticalSurveyQuestions {
        public static final String[][][] QUESTIONS = {
                        // Question 1
                        {
                                        { "What should be the government's role in healthcare?" },
                                        {
                                                        "Implement a universal single-payer system",
                                                        "Allow free-market competition with minimal regulation",
                                                        "Maintain private insurance with some regulations",
                                                        "A mix of public and private options with state flexibility"
                                        }
                        },
                        // Question 2
                        {
                                        { "How should taxes be structured?" },
                                        {
                                                        "Higher taxes on the wealthy to fund social programs",
                                                        "Minimal taxes, with voluntary contributions for services",
                                                        "Lower taxes across the board to stimulate growth",
                                                        "Moderate taxes with balanced spending"
                                        }
                        },
                        // Question 3
                        {
                                        { "What is the best approach to regulating businesses?" },
                                        {
                                                        "Strong regulations to protect workers and consumers",
                                                        "Minimal regulations to encourage free enterprise",
                                                        "Moderate regulations favoring business growth",
                                                        "Case-by-case regulation based on industry needs"
                                        }
                        },
                        // Question 4
                        {
                                        { "What should the government do about abortion rights?" },
                                        {
                                                        "Protect abortion access nationwide",
                                                        "Government should not be involved—leave it to individuals",
                                                        "Restrict abortion with limited exceptions",
                                                        "Allow states to decide their own laws"
                                        }
                        },
                        // Question 5
                        {
                                        { "How should the U.S. handle gun control?" },
                                        {
                                                        "Stricter background checks and assault weapon bans",
                                                        "No restrictions—protect full Second Amendment rights",
                                                        "Enforce existing laws but oppose new restrictions",
                                                        "Some regulations but respect gun ownership rights"
                                        }
                        },
                        // Question 6
                        {
                                        { "What is your stance on LGBTQ+ rights?" },
                                        {
                                                        "Full legal protections and anti-discrimination laws",
                                                        "Government should not interfere in personal matters",
                                                        "Traditional values should be prioritized",
                                                        "Support rights but with some cultural exceptions"
                                        }
                        },
                        // Question 7
                        {
                                        { "What should U.S. foreign policy prioritize?" },
                                        {
                                                        "Diplomacy and international alliances",
                                                        "Non-intervention and reduced military spending",
                                                        "Strong military and assertive global leadership",
                                                        "Selective engagement based on national interest"
                                        }
                        },
                        // Question 8
                        {
                                        { "How should immigration be handled?" },
                                        {
                                                        "Pathway to citizenship for undocumented immigrants",
                                                        "Open borders with minimal restrictions",
                                                        "Strong border security and merit-based immigration",
                                                        "Balanced approach with controlled legal immigration"
                                        }
                        },
                        // Question 9
                        {
                                        { "What is the best approach to climate change?" },
                                        {
                                                        "Green New Deal-style government intervention",
                                                        "Let the free market and innovation solve it",
                                                        "Oppose excessive regulations hurting businesses",
                                                        "Moderate policies encouraging clean energy"
                                        }
                        },
                        // Question 10
                        {
                                        { "How much should the government surveil citizens for security?" },
                                        {
                                                        "Some surveillance with strict oversight",
                                                        "No surveillance—privacy is absolute",
                                                        "Strong surveillance to prevent threats",
                                                        "Limited surveillance with judicial checks"
                                        }
                        },
                        // Question 11
                        {
                                        { "What should be done about student loan debt?" },
                                        {
                                                        "Widespread forgiveness and free college",
                                                        "Government should not be involved in loans",
                                                        "Oppose forgiveness—personal responsibility",
                                                        "Partial relief with repayment reforms"
                                        }
                        },
                        // Question 12
                        {
                                        { "Should social media be regulated for misinformation?" },
                                        {
                                                        "Yes, to prevent harm",
                                                        "No—absolute free speech",
                                                        "Only if biased against conservatives",
                                                        "Some oversight but avoid censorship"
                                        }
                        },
                        // Question 13
                        {
                                        { "What is the best way to reduce crime?" },
                                        {
                                                        "Address root causes like poverty",
                                                        "Decriminalize many offenses",
                                                        "More police and tougher sentencing",
                                                        "A mix of policing and social programs"
                                        }
                        },
                        // Question 14
                        {
                                        { "Should the U.S. have a central bank (Federal Reserve)?" },
                                        {
                                                        "Yes, but reform it",
                                                        "No—end the Fed",
                                                        "Keep it with minimal changes",
                                                        "Adjust its role but keep it"
                                        }
                        },
                        // Question 15
                        {
                                        { "What is your view on unions?" },
                                        {
                                                        "Strongly support worker unions",
                                                        "Oppose—let individuals negotiate",
                                                        "Prefer right-to-work laws",
                                                        "Support some unions but not all"
                                        }
                        }
        };

        // Constants for party indices
        private static final int DEMOCRAT = 0;
        private static final int LIBERTARIAN = 1;
        private static final int REPUBLICAN = 2;
        private static final int INDEPENDENT = 3;

        // Answer key mapping (question index -> answer index -> party)
        public static final int[][] ANSWER_KEY = {
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q1
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q2
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q3
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q4
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q5
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q6
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q7
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q8
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q9
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q10
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q11
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q12
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q13
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT }, // Q14
                        { DEMOCRAT, LIBERTARIAN, REPUBLICAN, INDEPENDENT } // Q15
        };

        public static String[][][] getQuestions() {
                return QUESTIONS;
        }

        /**
         * Gets a specific question by index
         * 
         * @param index Question number (0-based)
         * @return 2D array containing question and answers
         */
        public static String[][] getQuestion(int index) {
                if (index >= 0 && index < QUESTIONS.length) {
                        return QUESTIONS[index];
                }
                throw new IllegalArgumentException("Invalid question index: " + index);
        }

        public static int getQuestionCount() {
                return QUESTIONS.length;
        }

        public static int getAnswerParty(int questionIndex, int answerIndex) {
                if (questionIndex < 0 || questionIndex >= ANSWER_KEY.length) {
                        throw new IllegalArgumentException("Invalid question index");
                }
                if (answerIndex < 0 || answerIndex >= 4) {
                        throw new IllegalArgumentException("Answer must be between 0-3");
                }
                return ANSWER_KEY[questionIndex][answerIndex];
        }

        public static String getPartyName(int partyIndex) {
                if (partyIndex < 0 || partyIndex >= PARTY_NAMES.length) {
                        throw new IllegalArgumentException("Invalid party index");
                }
                return PARTY_NAMES[partyIndex];
        }

        public static void printQuestion(int questionIndex) {
                String[][] question = getQuestion(questionIndex);
                System.out.println("\nQuestion " + (questionIndex + 1) + ": " + question[0][0]);
                for (int i = 0; i < question[1].length; i++) {
                        System.out.println((char) ('A' + i) + ") " + question[1][i]);
                }
        }
}

class SurveyResponse {
    private String userId;
    private String[] answers;
    private String predictedParty;

    public SurveyResponse(String userId, String[] answers) {
        this.userId = userId;
        this.answers = answers;
    }

    public String getUserId() {
        return userId;
    }

    public String toCSV() {
        return String.join(",", answers);
    }

    public void setPredictedParty(String party) {
        this.predictedParty = party;
    }

    public String getPredictedParty() {
        return predictedParty;
    }
}